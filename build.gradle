plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.+'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "cubicturret" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.pitan76.net/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modApi "net.pitan76:mcpitanlib-fabric${rootProject.mcpitanlib_version}"
    include "net.pitan76:mcpitanlib_checker-fabric:${rootProject.mcpitanlib_checker_version}"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 8
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {
    }
}

apply plugin: "com.modrinth.minotaur"
apply plugin: "com.matthewprenger.cursegradle"

var modLoader = "fabric"

if (System.getenv("CURSEFORGE_TOKEN") != null) {
    curseforge {
        apiKey = System.getenv("CURSEFORGE_TOKEN")
        project {
            id = '1093081'
            changelog = rootProject.changelog + "\nMCPitanLib: " + rootProject.mcpitanlib_version.split(":")[1]
            releaseType = 'release'

            if (modLoader == "fabric")
                addGameVersion "Fabric"

            if (modLoader == "forge")
                addGameVersion "Forge"

            if (modLoader == "neoforge")
                addGameVersion "NeoForge"

            addGameVersion '1.18'
            addGameVersion '1.18.1'
            addGameVersion '1.18.2'
            addGameVersion '1.19'
            addGameVersion '1.19.1'
            addGameVersion '1.19.2'
            addGameVersion '1.20'
            addGameVersion '1.20.1'
            addGameVersion '1.20.3'
            addGameVersion '1.20.4'

            if (modLoader != "forge") {
                addGameVersion '1.21'
                addGameVersion '1.21.1'
                addGameVersion '1.21.2'
                addGameVersion '1.21.3'
                addGameVersion '1.21.4'
                addGameVersion '1.21.5'
                addGameVersion '1.21.6'
                addGameVersion '1.21.7'
            }

            relations {
                if (modLoader == "fabric") {
                    requiredDependency "fabric-api"
                }
                requiredDependency 'mcpitanlibarch'
            }

            mainArtifact(tasks.remapJar)
        }
    }

}

if (System.getenv("MODRINTH_TOKEN") != null) {
    modrinth {
        token = System.getenv("MODRINTH_TOKEN")
        projectId = 'cubicturret'
        versionNumber = project.mod_version + "-" + modLoader
        gameVersions = ['1.18', '1.18.1', '1.18.2', '1.19', '1.19.1', '1.19.2', '1.20', '1.20.1', '1.20.3', '1.20.4']

        if (modLoader != "forge") {
            gameVersions.addAll(['1.21', '1.21.1', '1.21.2', '1.21.3', '1.21.4', '1.21.5', '1.21.6', '1.21.7'])
        }

        versionType = 'release'
        uploadFile = tasks.remapJar
        changelog = rootProject.changelog + "\nMCPitanLib: " + rootProject.mcpitanlib_version.split(":")[1]
        loaders = [modLoader]
        dependencies {
            if (modLoader == "fabric") {
                required.project "P7dR8mSH" // Fabric API
            }
            required.project "uNRoUnGT" // MCPitanLib
        }
    }
}
